.TH "Writer" 3 "29 Nov 2011" "Version 0.1" "ElSA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Writer \- 
.PP
This class handles the output generated by the program.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Writer.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBWriter\fP (Parser *Input)"
.br
.ti -1c
.RI "void \fBwrite_params\fP (Parser *Input)"
.br
.ti -1c
.RI "void \fBwrite_welcome\fP (void)"
.br
.RI "\fIThis function writes a 'welcome' message. \fP"
.ti -1c
.RI "void \fBwrite_to_log\fP (char info[82])"
.br
.ti -1c
.RI "void \fBwrite_to_log\fP (void)"
.br
.RI "\fIThis overloaded function writes a blank line in the logfile and in the screen. \fP"
.ti -1c
.RI "void \fBwrite_pdb\fP (Mol *Cmol, vector< vector< double > >xyz, string outname)"
.br
.RI "\fIClass destructor. Closes the logfile. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "FILE * \fBlogfile\fP"
.br
.RI "\fIlogfile is defined as a C file to generate a written report (log) of the program run. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class handles the output generated by the program. 

Functions are provided to both write computed data to a logfile and show it on the screen. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Writer::Writer (Parser * Input)"Class constructor. Opens the logfile with the 'output' name defined in the input file. 
.PP
\fBParameters:\fP
.RS 4
\fIInput\fP Pointer to the Parser class. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Writer::write_params (Parser * Input)"This function writes down the parameters given by the user as input. 
.PP
\fBParameters:\fP
.RS 4
\fIPointer\fP to the Parser class 
.RE
.PP

.SS "void Writer::write_to_log (char info[82])"This message shows a char array in the screen and writes it to the logfile. 
.PP
\fBParameters:\fP
.RS 4
\fIinfo\fP char array (82 char long) with a message to be written/shown. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ElSA from the source code.
