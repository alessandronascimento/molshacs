<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="Minimizer2_8cpp" kind="file">
    <compoundname>Minimizer2.cpp</compoundname>
    <includes refid="Minimizer2_8h" local="yes">Minimizer2.h</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Minimizer2.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>03/03/2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nascimento</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Minimizer2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classMinimizer2_1a2e3f0b082ca42570ecd579be6f6aad01" refkind="member"><highlight class="normal"><ref refid="classMinimizer2_1a2e3f0b082ca42570ecd579be6f6aad01" kindref="member">Minimizer2::Minimizer2</ref>(Mol2<sp/>*_Cmol,<sp/>Parser<sp/>*_Input,<sp/>Grid<sp/>*_Cgrid,vector&lt;double&gt;<sp/>_elec_potential,<sp/>vector&lt;double&gt;<sp/>_rep_potential)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref><sp/>=<sp/>_Cmol;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref><sp/>=<sp/>_Cgrid;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref><sp/>=<sp/>_Input;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref><sp/>=<sp/>_rep_potential;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref><sp/>=<sp/>_elec_potential;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">Minimizer2::new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="classMinimizer2_1a2e3f0b082ca42570ecd579be6f6aad01" kindref="member">Minimizer2::Minimizer2</ref>(Mol2<sp/>*_RefMol,<sp/>Mol2*<sp/>_CompMol,<sp/>Parser<sp/>*_Input,<sp/>Grid<sp/>*_Cgrid,vector&lt;double&gt;<sp/>_elec_potential,<sp/>vector&lt;double&gt;<sp/>_rep_potential)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref><sp/>=<sp/>_CompMol;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Minimizer2::RefMol<sp/>=<sp/>_RefMol;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Minimizer2::CompMol<sp/>=<sp/>_CompMol;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref><sp/>=<sp/>_Cgrid;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref><sp/>=<sp/>_Input;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref><sp/>=<sp/>_rep_potential;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref><sp/>=<sp/>_elec_potential;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">Minimizer2::new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Minimizer2::pi<sp/>=<sp/>2.0*sqrt(2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Minimizer2::pj<sp/>=<sp/>2.0*sqrt(2);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classMinimizer2_1a6626777b2e2a1b09d2a1c925f45962a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a6626777b2e2a1b09d2a1c925f45962a4" kindref="member" tooltip="This function computes the distance among two atoms.">Minimizer2::dist</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z2)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt(((x2-x1)*(x2-x1))+((y2-y1)*(y2-y1))+((z2-z1)*(z2-z1)))<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Minimizer2::dist_squared(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z2){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((x2-x1)*(x2-x1))+((y2-y1)*(y2-y1))+((z2-z1)*(z2-z1)))<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" refkind="member"><highlight class="normal">vector&lt;vector&lt;double&gt;<sp/>&gt;<ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(vector&lt;vector&lt;double&gt;<sp/>&gt;xyz,<sp/>Mol2<sp/>*Cmol,<sp/>Grid<sp/>*Cgrid,<sp/>Parser<sp/>*Input){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>.clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ae32c788933fe4ffca055ae23817d3455" kindref="member" tooltip="Electrostatic potential of the &amp;quot;comparison&amp;quot; molecule.">current_elec</ref>.clear();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aa78fb8c18cb5eb88a2ed2092ea5683" kindref="member" tooltip="VDW Repulsive potential of the &amp;quot;comparison&amp;quot; molecule.">current_vdw</ref>.clear();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=Cgrid-&gt;min_x;<sp/>a&lt;=Cgrid-&gt;max_x;<sp/>a=<sp/>a+Input-&gt;sampling){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b=Cgrid-&gt;min_y;<sp/>b&lt;=Cgrid-&gt;max_y;<sp/>b=<sp/>b+Input-&gt;sampling){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c=Cgrid-&gt;min_z;<sp/>c&lt;=Cgrid-&gt;max_z;<sp/>c=<sp/>c+Input-&gt;sampling){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a98b7bf0f7dc850bc5ce22721d6a8caf2" kindref="member" tooltip="Electrostatic potential in a grid point.">elec</ref>=0.00;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repul=0.00;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Cmol-&gt;N;<sp/>i++){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>Minimizer2::dist_squared(a,<sp/>xyz[i][0],<sp/>b,<sp/>xyz[i][1],<sp/>c,<sp/>xyz[i][2]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r6<sp/>=<sp/>r2*r2*r2;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repul+=<sp/>((Cmol-&gt;epsilons_sqrt[i])*(pow((Cmol-&gt;radii[i]),<sp/>12)))/(pow((r6+Input-&gt;deltaij6),2));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a98b7bf0f7dc850bc5ce22721d6a8caf2" kindref="member" tooltip="Electrostatic potential in a grid point.">elec</ref>+=<sp/>(Cmol-&gt;charges[i]/18.2223)<sp/>/<sp/>(pow((r6+Input-&gt;deltaij_es6),(1.0/3.0)));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ae32c788933fe4ffca055ae23817d3455" kindref="member" tooltip="Electrostatic potential of the &amp;quot;comparison&amp;quot; molecule.">current_elec</ref>.push_back(<ref refid="classMinimizer2_1a98b7bf0f7dc850bc5ce22721d6a8caf2" kindref="member" tooltip="Electrostatic potential in a grid point.">elec</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aa78fb8c18cb5eb88a2ed2092ea5683" kindref="member" tooltip="VDW Repulsive potential of the &amp;quot;comparison&amp;quot; molecule.">current_vdw</ref>.push_back(repul);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>.push_back(<ref refid="classMinimizer2_1ae32c788933fe4ffca055ae23817d3455" kindref="member" tooltip="Electrostatic potential of the &amp;quot;comparison&amp;quot; molecule.">current_elec</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>.push_back(<ref refid="classMinimizer2_1a8aa78fb8c18cb5eb88a2ed2092ea5683" kindref="member" tooltip="VDW Repulsive potential of the &amp;quot;comparison&amp;quot; molecule.">current_vdw</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" refkind="member"><highlight class="normal">vector&lt;vector&lt;double&gt;<sp/>&gt;<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(Mol2<sp/>*Cmol,<sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;xyz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transz){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;nxyz;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>Cmol-&gt;N<sp/>;<sp/>i++){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>=xyz[i][0];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=xyz[i][1];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=xyz[i][2];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.push_back((((<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>)*(((cos(alpha*PI/180))*(cos(gamma*PI/180)))-((sin(alpha*PI/180))*(cos(beta*PI/180))*sin(gamma*PI/180))))<sp/>+<sp/>((y)*(((-cos(alpha*PI/180))*(sin(gamma*PI/180)))-(sin(alpha*PI/180)*cos(beta*PI/180)*cos(gamma*PI/180))))+<sp/>((z)*(sin(beta*PI/180)*sin(alpha*PI/180))))+transx);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.push_back((((<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>)*((sin(alpha*PI/180)*cos(gamma*PI/180))+(cos(alpha*PI/180)*cos(beta*PI/180)*sin(gamma*PI/180))))<sp/>+<sp/>((y)*((-sin(alpha*PI/180)*sin(gamma*PI/180))+(cos(alpha*PI/180)*cos(beta*PI/180)*cos(gamma*PI/180))))<sp/>+<sp/>((z)*(-sin(beta*PI/180)*cos(alpha*PI/180))))+transy);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.push_back((((<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>)*(sin(beta*PI/180)*sin(gamma*PI/180)))<sp/>+<sp/>((y)*sin(beta*PI/180)*cos(gamma*PI/180))<sp/>+<sp/>((z)*cos(beta*PI/180)))+transz);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nxyz.push_back(temp);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.clear();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(nxyz);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(vector&lt;double&gt;<sp/>elec_potential,<sp/>vector&lt;double&gt;<sp/>rep_potential,<sp/>vector&lt;double&gt;<sp/>elec,<sp/>vector&lt;double&gt;<sp/>vdw,<sp/>Parser<sp/>*Input){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2a073ef1806f84be7c4f4b8cf6f7f2a7" kindref="member" tooltip="Sum of differeces in objective function computation.">sum_diff</ref>=0.00;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_elec=0.0,<sp/><sp/>sum_vdw=0.0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;elec_potential.size();<sp/>i++){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elec_term<sp/>=<sp/>Input-&gt;elec_scale*(sqrt(pow((elec[i]-elec_potential[i]),2)));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_elec<sp/>+=<sp/>elec_term;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vdw_term<sp/>=<sp/>Input-&gt;vdw_scale*(sqrt(pow((vdw[i]-rep_potential[i]),2)));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_vdw<sp/>+=<sp/>vdw_term;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2a073ef1806f84be7c4f4b8cf6f7f2a7" kindref="member" tooltip="Sum of differeces in objective function computation.">sum_diff</ref>+=<sp/>elec_term<sp/>+<sp/>vdw_term;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%.4f<sp/>%.4f<sp/>%.4f\n&quot;</highlight><highlight class="normal">,<sp/>sum_elec,<sp/>sum_vdw,<sp/><ref refid="classMinimizer2_1a2a073ef1806f84be7c4f4b8cf6f7f2a7" kindref="member" tooltip="Sum of differeces in objective function computation.">sum_diff</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="classMinimizer2_1a2a073ef1806f84be7c4f4b8cf6f7f2a7" kindref="member" tooltip="Sum of differeces in objective function computation.">sum_diff</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" kindref="member" tooltip="GSL function to evaluate the objective function.">Minimizer2::diff_function_ele_vdw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*params){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>vr;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gsl<sp/>vector<sp/>v<sp/>has<sp/>6<sp/>items:<sp/>alpha,<sp/>beta,<sp/>gamma,<sp/>x<sp/>shift,<sp/>y<sp/>shift<sp/>and<sp/>z<sp/>shift.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>gsl_vector_get(v,0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>gsl_vector_get(v,1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>gsl_vector_get(v,2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>trans_limits[2]={-5.0,5.0};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transx<sp/>=<sp/>gsl_vector_get(v,3);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transx<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transx)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transy<sp/>=<sp/>gsl_vector_get(v,4);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transy<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transy)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transz=<sp/>gsl_vector_get(v,5);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transz<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transz)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//rotate/translate<sp/>coordinates<sp/>in<sp/>the<sp/>desired<sp/>angles/shift.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>new<sp/>electrostatic<sp/>potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//computing<sp/>the<sp/>correlation<sp/>coefficient<sp/>in<sp/>three<sp/>steps;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref><sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Objective<sp/>Function<sp/>Value:<sp/>%.4f\n&quot;,<sp/>t1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Minimizer2::function_gaussian_shape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*params){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>vr;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>gsl_vector_get(v,0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>gsl_vector_get(v,1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>gsl_vector_get(v,2);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transx<sp/>=<sp/>gsl_vector_get(v,3);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transy<sp/>=<sp/>gsl_vector_get(v,4);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transz=<sp/>gsl_vector_get(v,5);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Gaussian<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gaussian*<sp/>Gauss<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Gaussian;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Gauss;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1.0/f);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classMinimizer2_1aeefc6cb4586a434a88abdadff44ad7ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1aeefc6cb4586a434a88abdadff44ad7ec" kindref="member" tooltip="Computes the gradient for GSL functions.">Minimizer2::diff_gradient_elec_plus_vdw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*v,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*params,<sp/>gsl_vector<sp/>*df){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>g,<sp/>transx,transy,<sp/>transz;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/>new_xyz2;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dcc_dvr0,<sp/>dcc_dvr1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>gsl_vector_get(v,0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>gsl_vector_get(v,1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>gsl_vector_get(v,2);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>trans_limits[2]={-5.0,5.0};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transx<sp/>=<sp/>gsl_vector_get(v,3);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transx<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transx)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transy<sp/>=<sp/>gsl_vector_get(v,4);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transy<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transy)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transz=<sp/>gsl_vector_get(v,5);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>transz<sp/>=<sp/>trans_limits[0]+(trans_limits[1]-trans_limits[0]/(1+exp(-transz)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>divide<sp/>the<sp/>problem<sp/>in<sp/>six<sp/>steps,<sp/>i.e.,<sp/>alpha,<sp/>beta,<sp/>gamma,<sp/>x<sp/>shift,<sp/>y<sp/>shift<sp/>and<sp/>z<sp/>shift<sp/>derivatives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr0<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alpha<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>0,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>beta<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>1,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gamma<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>transx,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>2,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x<sp/>shift<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>transy,<sp/>transz);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>3,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>y<sp/>shift<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>transz);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>4,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>z<sp/>shift<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_xyz=<ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>a,<sp/>b,<sp/>g,<sp/>transx,<sp/>transy,<sp/>transz+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(new_xyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcc_dvr1<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(df,<sp/>5,<sp/>((dcc_dvr1-dcc_dvr0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta));</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classMinimizer2_1a3bf50d7081499de21718741509ed95f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a3bf50d7081499de21718741509ed95f4" kindref="member" tooltip="Computes function and gradient and once.">Minimizer2::diff_function_and_gradient_elec_plus_vdw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_vector<sp/>*x,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*params,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*f,<sp/>gsl_vector<sp/>*df){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*f<sp/>=<sp/><ref refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" kindref="member" tooltip="GSL function to evaluate the objective function.">Minimizer2::diff_function_ele_vdw</ref>(x,<sp/>params);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1aeefc6cb4586a434a88abdadff44ad7ec" kindref="member" tooltip="Computes the gradient for GSL functions.">Minimizer2::diff_gradient_elec_plus_vdw</ref>(x,<sp/>params,<sp/>df);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classMinimizer2_1a2778f65c914c177b809863bbb138b330" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a2778f65c914c177b809863bbb138b330" kindref="member">Minimizer2::minimize_lbfgs2_elec_plus_vdw</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_multimin_fdfminimizer_type<sp/>*T;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer<sp/>*s;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_function_fdf<sp/>function;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iter=0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[6]<sp/>=<sp/>{1.0,<sp/>2.0,<sp/>3.0,<sp/>4.0,<sp/>5.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref><sp/>=<sp/>0.00;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.n=6;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.f=&amp;<ref refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" kindref="member" tooltip="GSL function to evaluate the objective function.">Minimizer2::diff_function_ele_vdw</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.df=&amp;<ref refid="classMinimizer2_1aeefc6cb4586a434a88abdadff44ad7ec" kindref="member" tooltip="Computes the gradient for GSL functions.">Minimizer2::diff_gradient_elec_plus_vdw</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.fdf=&amp;<ref refid="classMinimizer2_1a3bf50d7081499de21718741509ed95f4" kindref="member" tooltip="Computes function and gradient and once.">Minimizer2::diff_function_and_gradient_elec_plus_vdw</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.params=(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)p;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector<sp/>*<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>0,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>1,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>2,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>3,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>4,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>5,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Changing<sp/>parameters:<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>gsl_vector_get(x,<sp/>0),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(x,<sp/>1),<sp/>gsl_vector_get(x,<sp/>2),gsl_vector_get(x,<sp/>3),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(x,<sp/>4),gsl_vector_get(x,<sp/>5));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>gsl_multimin_fdfminimizer_vector_bfgs2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>gsl_multimin_fdfminimizer_alloc(T,6);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer_set(s,<sp/>&amp;function,<sp/>x,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;step,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Minimizer:<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,<sp/>gsl_multimin_fdfminimizer_name(s));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref>=0.00;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref><sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_fdfminimizer_iterate(s);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_test_gradient(s-&gt;gradient,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time1=clock();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>=<sp/>((double)(time1)-(double)(<ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref>))/CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>==<sp/>GSL_CONTINUE<sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>Minimizer2::Input-&gt;nsteps<sp/>&amp;&amp;<sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer_restart(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>gsl_multimin_fdfminimizer_iterate(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(status)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>gsl_multimin_test_gradient(s-&gt;gradient,<sp/>Minimizer2::Input-&gt;tol);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(status<sp/>==<sp/>GSL_CONTINUE<sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>Minimizer2::Input-&gt;nsteps);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=gsl_multimin_fdfminimizer_minimum(s);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Minimized<sp/>Values:<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f\n&quot;,<sp/>gsl_vector_get(s-&gt;x,<sp/>0),</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(s-&gt;x,<sp/>1),</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(s-&gt;x,<sp/>2),</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>3)))))),</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>4)))))),</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>5)))))));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer_free(s);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(x);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classMinimizer2_1a90746efac2942fa9a6d25b0e4bfdc75d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a90746efac2942fa9a6d25b0e4bfdc75d" kindref="member">Minimizer2::minimize_conjugate_gradient_elec_plus_vdw</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_multimin_fdfminimizer_type<sp/>*T;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer<sp/>*s;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_function_fdf<sp/>function;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iter=0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[6]<sp/>=<sp/>{1.0,<sp/>2.0,<sp/>3.0,<sp/>4.0,<sp/>5.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref><sp/>=<sp/>0.00;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.n=6;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.f=&amp;<ref refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" kindref="member" tooltip="GSL function to evaluate the objective function.">Minimizer2::diff_function_ele_vdw</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.df=&amp;<ref refid="classMinimizer2_1aeefc6cb4586a434a88abdadff44ad7ec" kindref="member" tooltip="Computes the gradient for GSL functions.">Minimizer2::diff_gradient_elec_plus_vdw</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.fdf=&amp;<ref refid="classMinimizer2_1a3bf50d7081499de21718741509ed95f4" kindref="member" tooltip="Computes function and gradient and once.">Minimizer2::diff_function_and_gradient_elec_plus_vdw</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.params=(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)p;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector<sp/>*<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>0,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>1,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>2,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>3,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>4,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>5,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Changing<sp/>parameters:<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>gsl_vector_get(x,<sp/>0),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(x,<sp/>1),<sp/>gsl_vector_get(x,<sp/>2),gsl_vector_get(x,<sp/>3),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(x,<sp/>4),gsl_vector_get(x,<sp/>5));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>gsl_multimin_fdfminimizer_conjugate_pr;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>gsl_multimin_fdfminimizer_alloc(T,6);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer_set(s,<sp/>&amp;function,<sp/>x,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;step,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Minimizer:<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,<sp/>gsl_multimin_fdfminimizer_name(s));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref>=0.00;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref><sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_fdfminimizer_iterate(s);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_test_gradient(s-&gt;gradient,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time1=clock();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>=<sp/>((double)(time1)-(double)(<ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref>))/CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>==<sp/>GSL_CONTINUE<sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>Minimizer2::Input-&gt;nsteps<sp/>&amp;&amp;<sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=gsl_multimin_fdfminimizer_minimum(s);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Minimized<sp/>Values:<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f<sp/>%.2f\n&quot;,<sp/>gsl_vector_get(s-&gt;x,<sp/>0),</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(s-&gt;x,<sp/>1),</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_get(s-&gt;x,<sp/>2),</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>3)))))),</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>4)))))),</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-5.0<sp/>+<sp/>(10.0/(1+(exp(-gsl_vector_get(s-&gt;x,<sp/>5)))))));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fdfminimizer_free(s);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(x);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classMinimizer2_1a4669dfe9dc28152658860fd674427279" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a4669dfe9dc28152658860fd674427279" kindref="member">Minimizer2::minimize_simplex_elec_plus_vdw</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_multimin_fminimizer_type<sp/>*T<sp/>=<sp/>gsl_multimin_fminimizer_nmsimplex;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer<sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector<sp/>*ss,<sp/>*<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_function<sp/>minex_func;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iter=0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[6]<sp/>=<sp/>{1.0,<sp/>2.0,<sp/>3.0,<sp/>4.0,<sp/>5.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref><sp/>=<sp/>0.00;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>0,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>1,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>2,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>3,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>4,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>5,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss=gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set_all<sp/>(ss,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;step);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.n=6;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.f=<ref refid="classMinimizer2_1ae46bf1366f7275747b344ec6e39d9178" kindref="member" tooltip="GSL function to evaluate the objective function.">Minimizer2::diff_function_ele_vdw</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.params=p;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>gsl_multimin_fminimizer_alloc<sp/>(T,<sp/>6);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer_set<sp/>(s,<sp/>&amp;minex_func,<sp/>x,<sp/>ss);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Minimizer:<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,<sp/>gsl_multimin_fminimizer_name(s));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref>=0.00;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref><sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_fminimizer_iterate(s);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>gsl_multimin_fminimizer_size<sp/>(s);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_test_size(size,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time1=clock();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>=<sp/>((double)(time1)-(double)(<ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref>))/CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>==<sp/>GSL_CONTINUE<sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>Minimizer2::Input-&gt;nsteps<sp/>&amp;&amp;<sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=gsl_multimin_fminimizer_minimum(s);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(x);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(ss);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer_free(s);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Minimizer2::minimize_simplex_shape_density(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_multimin_fminimizer_type<sp/>*T<sp/>=<sp/>gsl_multimin_fminimizer_nmsimplex;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer<sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector<sp/>*ss,<sp/>*<ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_function<sp/>minex_func;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iter=0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[6]<sp/>=<sp/>{1.0,<sp/>2.0,<sp/>3.0,<sp/>4.0,<sp/>5.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref><sp/>=<sp/>0.00;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>start<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>0,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>1,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>2,<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0))));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>3,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>4,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set(x,<sp/>5,<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0))));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss=gsl_vector_alloc(6);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_set_all<sp/>(ss,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;step);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.n=6;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.f=Minimizer2::function_gaussian_shape;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minex_func.params=p;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>gsl_multimin_fminimizer_alloc<sp/>(T,<sp/>6);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer_set<sp/>(s,<sp/>&amp;minex_func,<sp/>x,<sp/>ss);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Minimizer:<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,<sp/>gsl_multimin_fminimizer_name(s));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref>=0.00;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref><sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_fminimizer_iterate(s);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>gsl_multimin_fminimizer_size<sp/>(s);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>=<sp/>gsl_multimin_test_size(size,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time1=clock();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>=<sp/>((double)(time1)-(double)(<ref refid="classMinimizer2_1ac63693b02b0d74534c318db59499891b" kindref="member" tooltip="Timer for minimization functions.">time0</ref>))/CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1ab2fc020ca4f53c83045abb9533932e8f" kindref="member" tooltip="Status of the minimizer.">status</ref><sp/>==<sp/>GSL_CONTINUE<sp/>&amp;&amp;<sp/>iter<sp/>&lt;<sp/>Minimizer2::Input-&gt;nsteps<sp/>&amp;&amp;<sp/><ref refid="classMinimizer2_1a2fefd1c40811da6a30fed3c273e624d7" kindref="member" tooltip="Time elapsed for minimization procedure.">time_elapsed</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=gsl_multimin_fminimizer_minimum(s);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(x);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_vector_free(ss);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsl_multimin_fminimizer_free(s);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="classMinimizer2_1a911683db438c2a9ea9f0c47fd123a92e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a911683db438c2a9ea9f0c47fd123a92e" kindref="member" tooltip="For test purposes only. Computes the gradient for variations in alpha.">Minimizer2::test_alpha_gradient</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha){</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;nxyz<sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>alpha,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;nxyz2<sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>alpha+<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;dvrdr=<ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(nxyz,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g0=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,dvrdr[0],<sp/>dvrdr[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvrdr=<ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(nxyz2,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1=<ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">rep_potential</ref>,<sp/>dvrdr[0],<sp/>dvrdr[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>grad<sp/>=<sp/>(g1-g0)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(grad);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="classMinimizer2_1aa02fa519d5e9dcbfbf2053317200e9c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1aa02fa519d5e9dcbfbf2053317200e9c7" kindref="member" tooltip="For test purposes only. Computes the objective function for variations in alpha.">Minimizer2::test_alpha_function</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;nxyz2=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>-&gt;xyz,<sp/>alpha,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;grid<sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(nxyz2,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">rep_potential</ref>,<sp/>grid[0],<sp/>grid[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(f);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;x,<sp/>std::vector&lt;double&gt;<sp/>&amp;grad,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data){</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref><sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!grad.empty()){</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0]<sp/>+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta<sp/>,<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[0]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1]<sp/>+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta<sp/>,<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[1]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[2]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[3]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[5]);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[4]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref><sp/>=<sp/><ref refid="classMinimizer2_1a1aa54d9e6855cf39ad8be1f2f8499a01" kindref="member" tooltip="Computes the electrostatic and the vdw grids at once for a molecule.">Minimizer2::compute_grid_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>,<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/><ref refid="classMinimizer2_1a341b5cd394c900ca5496b888168d3948" kindref="member" tooltip="Computes the objective function.">Minimizer2::compute_diff_elec_plus_vdw</ref>(<ref refid="classMinimizer2_1a83498ab8f10adf03fa6e909b24987468" kindref="member" tooltip="Electrostatic potential for the reference molecule.">Minimizer2::elec_potential</ref>,<sp/><ref refid="classMinimizer2_1a5464403781e3ce5bbd29027c954b0163" kindref="member" tooltip="VDW Repulsive potential for the reference molecule as computed in the main program...">Minimizer2::rep_potential</ref>,<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[0],<sp/><ref refid="classMinimizer2_1a8aede4777e9d3fdc7bd0216e8ca9f045" kindref="member" tooltip="Vector of vectors containing current_elec and current_vdw.">elec_plus_vdw_grids</ref>[1],<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[5]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Objective<sp/>Function<sp/>Value:<sp/>%.4f\n&quot;,<sp/>t1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Minimizer2::nlopt_func_gauss_density(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;x,<sp/>std::vector&lt;double&gt;<sp/>&amp;grad,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gaussian*<sp/>Gauss<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Gaussian;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref><sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref><sp/>=<sp/>1.0/<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!grad.empty()){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0]<sp/>+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta<sp/>,<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[0]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1]<sp/>+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta<sp/>,<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[1]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[3],<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[2]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[4],<sp/>x[5]);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[3]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta,<sp/>x[5]);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[4]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref><sp/>=<sp/><ref refid="classMinimizer2_1a7bc4c2fe892e0339048d9ca7932cdf69" kindref="member" tooltip="Computes new coordinates after a translation and a rotation.">Minimizer2::rototranslate</ref>(<ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Minimizer2::Cmol</ref>,<sp/><ref refid="classMinimizer2_1af79d496194cba04903627d821f0faca3" kindref="member" tooltip="Pointer to the MOL Class.">Cmol</ref>-&gt;xyz,<sp/>x[0],<sp/>x[1],<sp/>x[2],<sp/>x[3],<sp/>x[4],<sp/>x[5]+<sp/><ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>Gauss-&gt;compute_shape_and_charge_density(RefMol,<sp/>CompMol,<sp/><ref refid="classMinimizer2_1a680a201172c6518d60325eaac358b371" kindref="member" tooltip="Rototranslated coordinates.">new_xyz</ref>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>1.0/t2;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad[5]<sp/>=<sp/>(t2-<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>)/<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;delta;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Objective<sp/>Function<sp/>Value:<sp/>%.4f\n&quot;,<sp/>t1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1afefc05f3f81b5f002041933d12352642" kindref="member" tooltip="Objective function value.">t1</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classMinimizer2_1ad602f01ea4329924251775435c97d12c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1ad602f01ea4329924251775435c97d12c" kindref="member">Minimizer2::minimize_nlopt_auglag</ref>(){</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::AUGLAG,6);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlopt::opt<sp/>local_opt(nlopt::LD_MMA,<sp/>6);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="classMinimizer2_1a39d440b959db32c57baab3a322758821" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a39d440b959db32c57baab3a322758821" kindref="member">Minimizer2::minimize_nlopt_mma</ref>(){</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::LD_MMA,6);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>nlopt::opt<sp/>local_opt(nlopt::LN_NELDERMEAD,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Minimizer2::minimize_density_nlopt_mma(){</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::LD_MMA,6);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(Minimizer2::nlopt_func_gauss_density,<sp/>NULL);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="classMinimizer2_1aca9af00ae1cf0399a476cbb6e22e09e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1aca9af00ae1cf0399a476cbb6e22e09e3" kindref="member">Minimizer2::minimize_nlopt_isres</ref>(){</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::GN_ISRES,6);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlopt::opt<sp/>local_opt(nlopt::LN_NELDERMEAD,<sp/>6);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="classMinimizer2_1a781d7c1c19a0198afaa2e42bfee1651d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a781d7c1c19a0198afaa2e42bfee1651d" kindref="member">Minimizer2::minimize_nlopt_subplex</ref>(){</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::LN_SBPLX,6);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>nlopt::opt<sp/>local_opt(nlopt::LN_SBPLX,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927" refid="classMinimizer2_1acd7f7eb0f80c6b91268d3b81abd5bd1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1acd7f7eb0f80c6b91268d3b81abd5bd1e" kindref="member">Minimizer2::minimize_nlopt_simplex</ref>(){</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::LN_NELDERMEAD,6);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>nlopt::opt<sp/>local_opt(nlopt::LN_SBPLX,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classMinimizer2_1a4981a5f90d855bc1d25b857881edb172" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a4981a5f90d855bc1d25b857881edb172" kindref="member">Minimizer2::minimize_nlopt_bfgs2</ref>(){</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::LD_LBFGS,6);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="classMinimizer2_1ac8b7b2846ad8d37e41f1b6b07045aef2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1ac8b7b2846ad8d37e41f1b6b07045aef2" kindref="member">Minimizer2::minimize_nlopt_direct</ref>(){</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::GN_DIRECT_L,6);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>nlopt::opt<sp/>local_opt(nlopt::LN_NELDERMEAD,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="classMinimizer2_1a3c0a0abe78fc3b33e91e098d13b7f43a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classMinimizer2_1a3c0a0abe78fc3b33e91e098d13b7f43a" kindref="member">Minimizer2::minimize_nlopt_stogo</ref>(){</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::opt<sp/>opt(nlopt::GD_STOGO,6);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Creating<sp/>a<sp/>local<sp/>minimizer<sp/>object...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>nlopt::opt<sp/>local_opt(nlopt::LN_NELDERMEAD,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>opt.set_local_optimizer(local_opt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>lb(6);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[0]<sp/>=<sp/>-180.0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[1]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[2]<sp/>=<sp/>-90.0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_x;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_y;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;min_z;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>ub(6);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[0]=<sp/>180.0;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[1]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[2]<sp/>=<sp/>90.0;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[3]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_x;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[4]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_y;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[5]<sp/>=<sp/><ref refid="classMinimizer2_1a82909d2dd56fc9747ae6edbe94b2e5d2" kindref="member" tooltip="Pointer to the GRID Class.">Minimizer2::Cgrid</ref>-&gt;max_z;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_lower_bounds(lb);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_upper_bounds(ub);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_min_objective(<ref refid="classMinimizer2_1aa27645b2a1bd68dc6249729bf15340f7" kindref="member">Minimizer2::nlopt_func_elec_plus_vdw</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>a<sp/>tolerance....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_xtol_rel(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;tol);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.set_maxtime(<ref refid="classMinimizer2_1a589bf24b76630588dbd93b78ed85deb4" kindref="member" tooltip="Pointer to the INPUT Class.">Minimizer2::Input</ref>-&gt;timeout);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Defining<sp/>starting<sp/>conditions....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classMinimizer2_1ad34cff3ae59c83548e2d5485e800897e" kindref="member" tooltip="x, y and z coordinates">x</ref>(6);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[2]<sp/>=<sp/>(-10.0<sp/>+<sp/>(1.0<sp/>*(rnumber*20.0)));</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[3]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[4]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnumber<sp/>=<sp/>double(rand())/(double(RAND_MAX)+1.0);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[5]<sp/>=<sp/>(-1.0<sp/>+<sp/>(1.0<sp/>*(rnumber*2.0)));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>=0.00;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Optimizing<sp/>the<sp/>objective<sp/>function....\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlopt::result<sp/>result<sp/>=<sp/>opt.optimize(x,<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classMinimizer2_1a166a976d19a3c0c33222b3d000377586" kindref="member" tooltip="Minimum of the objective function reached after minimization.">f_minimum</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cygdrive/c/Users/Nascimento/workspace/SPCA_GUI/src/Minimizer2.cpp"/>
  </compounddef>
</doxygen>
