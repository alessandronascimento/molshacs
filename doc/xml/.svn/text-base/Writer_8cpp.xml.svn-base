<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="Writer_8cpp" kind="file">
    <compoundname>Writer.cpp</compoundname>
    <includes refid="Writer_8h" local="yes">Writer.h</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Writer.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>03/03/2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nascimento</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Writer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classWriter_1ac88fad807802f918f68052d7f3b06c32" refkind="member"><highlight class="normal"><ref refid="classWriter_1ac88fad807802f918f68052d7f3b06c32" kindref="member">Writer::Writer</ref>(Parser<sp/>*Input)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>=<sp/>fopen((Input-&gt;output+</highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classWriter_1aae2301f0f38bc7425b9bebd9d01fcf25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1aae2301f0f38bc7425b9bebd9d01fcf25" kindref="member">Writer::write_params</ref>(Parser<sp/>*Input){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Parsed<sp/>parameters:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Parsed<sp/>parameters:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;refmol_mol2&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;refmol_mol2.c_str());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;refmol_mol2&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;refmol_mol2.c_str());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mol2_aa&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;mol2_aa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mol2_aa&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;mol2_aa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mol2<sp/>amber<sp/>atoms?&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;mol2_aa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mol2<sp/>amber<sp/>atoms&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;mol2_aa,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;deltaij6&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;deltaij6,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;deltaij6&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;deltaij6,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;deltaij_es6&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;deltaij_es6,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;deltaij_es6&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;deltaij_es6,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sampling&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;sampling,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sampling&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;sampling,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;box_size&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;box_size*2,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;box_size&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;box_size*2,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;align_molecules&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;align,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;align_molecules&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;align,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.3f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;search<sp/>step&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;step<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.3f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;search<sp/>step&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;step<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>tol&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;tol<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>tol&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;tol<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>steps&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;nsteps<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>steps&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;nsteps<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>delta&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;delta,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.4f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimization<sp/>delta&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;delta,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimizer&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;minimizer.c_str());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;minimizer&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;minimizer.c_str());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multi&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;multi,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;multi&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;multi,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;molsfile&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;molsfile.c_str());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;molsfile&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;molsfile.c_str());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;output.c_str());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-63s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;output.c_str());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>coordinates&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;write_pdb,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>coordinates&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;write_pdb,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;electrostatic<sp/>scale&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;elec_scale,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;electrostatic<sp/>scale&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;elec_scale,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VDW<sp/>scale&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;vdw_scale,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20.2f<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VDW<sp/>scale&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;vdw_scale,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timeout&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;timeout,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*%-20s<sp/>%-20d<sp/>%42s*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timeout&quot;</highlight><highlight class="normal">,<sp/>Input-&gt;timeout,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classWriter_1a12c58122d5143eb3e87c368459767da3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1a12c58122d5143eb3e87c368459767da3" kindref="member" tooltip="This function writes a &amp;quot;welcome&amp;quot; message.">Writer::write_welcome</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElSA<sp/>v.<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Electrostatic-based<sp/>Similarity<sp/>Analysis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>Written<sp/>by<sp/>Alessandro<sp/>S.<sp/>Nascimento-Jun/2010<sp/>-<sp/><sp/>alessandro.nascimento@ufabc.edu.br<sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Universidade<sp/>Federal<sp/>do<sp/>ABC<sp/>-<sp/>Brazil<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://nascimento.ufabc.edu.br/wordpress/?page_id=14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>using<sp/>a<sp/>85<sp/>character<sp/>long<sp/>field<sp/>to<sp/>print<sp/>all<sp/>messages!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElSA<sp/>v.<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Electrostatic-based<sp/>Similarity<sp/>Analysis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>Written<sp/>by<sp/>Alessandro<sp/>S.<sp/>Nascimento-Jun/2010<sp/>-<sp/><sp/>alessandro.nascimento@ufabc.edu.br<sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Universidade<sp/>Federal<sp/>do<sp/>ABC<sp/>-<sp/>Brazil<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://nascimento.ufabc.edu.br/wordpress/?page_id=14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>%82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>am<sp/>using<sp/>a<sp/>85<sp/>character<sp/>long<sp/>field<sp/>to<sp/>print<sp/>all<sp/>messages!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classWriter_1ae6c8a4c5bc3323564a9fe23ebd288dcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1ab1ac284f7605d1c3d48744081b5989c8" kindref="member" tooltip="This overloaded function writes a blank line in the logfile and in the screen.">Writer::write_to_log</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info[82]){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/>info);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/>info);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classWriter_1ab1ac284f7605d1c3d48744081b5989c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1ab1ac284f7605d1c3d48744081b5989c8" kindref="member" tooltip="This overloaded function writes a blank line in the logfile and in the screen.">Writer::write_to_log</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>%-82s<sp/>*\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classWriter_1ac5d81d1de694841fe7dd26e189d4242f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1ac5d81d1de694841fe7dd26e189d4242f" kindref="member" tooltip="Class destructor. Closes the logfile.">Writer::write_pdb</ref>(Mol<sp/>*Cmol,<sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;xyz,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>outname){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzFile<sp/>outpdb;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outpdb<sp/>=<sp/>gzopen((outname+</highlight><highlight class="stringliteral">&quot;.pdb.gz&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;MDL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;REMARK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resn=0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(resn<sp/>&lt;<sp/>Cmol-&gt;residue_pointer.size()-1){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>Cmol-&gt;residue_pointer[resn+1]-1){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ATOM<sp/><sp/><sp/>%4d%4s<sp/><sp/>%3.3s<sp/><sp/>%4d<sp/><sp/><sp/><sp/>%<sp/>8.3f<sp/>%<sp/>7.3f<sp/>%<sp/>7.3f<sp/><sp/><sp/>0.000<sp/><sp/><sp/><sp/>0.00<sp/><sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>i+1,<sp/>Cmol-&gt;atomnames[i].c_str(),<sp/>Cmol-&gt;resnames[resn].c_str(),<sp/>resn+1,<sp/>xyz[i][0],<sp/>xyz[i][1],<sp/>xyz[i][2]);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resn++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>Cmol-&gt;N){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ATOM<sp/><sp/><sp/>%4d%4s<sp/><sp/>%3.3s<sp/><sp/>%4d<sp/><sp/><sp/><sp/>%<sp/>8.3f<sp/>%<sp/>7.3f<sp/>%<sp/>7.3f<sp/><sp/><sp/>0.000<sp/><sp/><sp/><sp/>0.00<sp/><sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>i+1,<sp/>Cmol-&gt;atomnames[i].c_str(),<sp/>Cmol-&gt;resnames[resn].c_str(),<sp/>resn+1,<sp/>xyz[i][0],<sp/>xyz[i][1],<sp/>xyz[i][2]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;TER\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ENDMDL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzclose(outpdb);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classWriter_1ac5d81d1de694841fe7dd26e189d4242f" kindref="member" tooltip="Class destructor. Closes the logfile.">Writer::write_pdb</ref>(Mol2<sp/>*Cmol,<sp/>vector&lt;vector&lt;double&gt;<sp/>&gt;xyz,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>outname){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzFile<sp/>outpdb;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outpdb<sp/>=<sp/>gzopen((outname+</highlight><highlight class="stringliteral">&quot;.pdb.gz&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;MDL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;REMARK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resn=0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(resn<sp/>&lt;<sp/>Cmol-&gt;residue_pointer.size()-1){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>Cmol-&gt;residue_pointer[resn+1]-1){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ATOM<sp/><sp/><sp/>%4d%4s<sp/><sp/>%3.3s<sp/><sp/>%4d<sp/><sp/><sp/><sp/>%<sp/>8.3f<sp/>%<sp/>7.3f<sp/>%<sp/>7.3f<sp/><sp/><sp/>0.000<sp/><sp/><sp/><sp/>0.00<sp/><sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>i+1,<sp/>Cmol-&gt;atomnames[i].c_str(),<sp/>Cmol-&gt;resnames[resn].c_str(),<sp/>resn+1,<sp/>xyz[i][0],<sp/>xyz[i][1],<sp/>xyz[i][2]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resn++;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>Cmol-&gt;N){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ATOM<sp/><sp/><sp/>%4d%4s<sp/><sp/>%3.3s<sp/><sp/>%4d<sp/><sp/><sp/><sp/>%<sp/>8.3f<sp/>%<sp/>7.3f<sp/>%<sp/>7.3f<sp/><sp/><sp/>0.000<sp/><sp/><sp/><sp/>0.00<sp/><sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>i+1,<sp/>Cmol-&gt;atomnames[i].c_str(),<sp/>Cmol-&gt;resnames[resn].c_str(),<sp/>resn+1,<sp/>xyz[i][0],<sp/>xyz[i][1],<sp/>xyz[i][2]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;TER\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzprintf(outpdb,<sp/></highlight><highlight class="stringliteral">&quot;ENDMDL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzclose(outpdb);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">Writer::~Writer(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Writer::close(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>,</highlight><highlight class="stringliteral">&quot;**************************************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(<ref refid="classWriter_1a2bc15cd60f8b6e7f8732bc9421d2a533" kindref="member" tooltip="logfile is defined as a C file to generate a written report (log) of the program...">logfile</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cygdrive/c/Users/Nascimento/workspace/SPCA_GUI/src/Writer.cpp"/>
  </compounddef>
</doxygen>
